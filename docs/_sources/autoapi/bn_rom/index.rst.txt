:mod:`bn_rom`
=============

.. py:module:: bn_rom


Module Contents
---------------


.. py:class:: BnROM(mean_file='yolov3_tiny/yolov3_tiny_mean.h', scale_file='yolov3_tiny/yolov3_tiny_scale.h', variance_file='yolov3_tiny/yolov3_tiny_variance.h', bias_file='yolov3_tiny/yolov3_tiny_biases.h', path='/home/welberthime/Documentos/nios-darknet/include', **kwargs)

   Bases: :class:`ComponentClass.ComponentClass`

   This class implements some functions to read the weights file and generate
   a ROM with the values identifyied by the layer_id, channel_id and unit_id.
   The clock signal serves only to give a signal to the sensitive list of the
   process, registers should not be generated.

   Both path to weights and data arrays about the weight organizations should
   be informed or implemented. The data to tiny_yolov3 first layer weights is
   informed in the __init__ method. To generate the kernel ROMs, this class
   provides some methods to read the weights, convert them to binary values
   and convert them to fixed point representation. By default, each ROM has
   only nine values to feed the convolutional units.

   :param clk: clock signal
   :type clk: std_logic
   :param q: the concatenated output values of the ROM
   :type q: std_logic_vector

   .. method:: get_signals(self)



   .. method:: rtl(self, clk, q_bn, q_ssi)




.. data:: name
   

   

