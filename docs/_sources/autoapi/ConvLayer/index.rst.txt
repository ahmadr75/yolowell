:mod:`ConvLayer`
================

.. py:module:: ConvLayer


Module Contents
---------------


.. py:class:: ConvLayer(layer_id=0, **kwargs)

   Bases: :class:`ComponentClass.ComponentClass`

   This class gather some MultiChannelConvUnits sharing the same inputs and
   makes your outputs availables to an external unit, probably a BufferLayer.
   The number MultiChannelConvUnits instantiated is this class is defined in
   the constants of the ComponentClass.

   :param clk: clock signal
   :type clk: std_logic
   :param reset: reset signal
   :type reset: std_logic
   :param en_mult: enable signal
   :type en_mult: std_logic
   :param en_sum: enable signal
   :type en_sum: std_logic
   :param input: vector with the nine input values concatenated, each value    should be an signed value with 16 bits width
   :type input: std_logic_vector
   :param output: the output value of the convolutions
   :type output: unsigned

   .. method:: rtl(self, clk, reset, input, output, en_mult, en_sum, en_channel, en_batch, en_act)



   .. method:: get_signals(self)




.. data:: name
   

   

